map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

{{ range $path, $containers := groupByMulti $ "Env.VIRTUAL_PATH" "," }}
{{ range $index, $value := $containers }}
  
 



upstream {{ $value.Name }} {
 
	{{ $addrLen := len $value.Addresses }}
  {{ $network := index $value.Networks 0 }}

	{{/* If only 1 port exposed, use that */}}
	{{ if eq $addrLen 1 }}
		{{ with $address := index $value.Addresses 0 }}
      # {{$value.Name}}
      server {{ $value.Name }}:{{ $address.Port }} max_fails=0;
		{{ end }}

	{{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
	{{ else if $value.Env.VIRTUAL_PORT }}
		{{ range $i, $address := $value.Addresses }}
      {{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
      # {{$value.Name}}
      server {{ $value.Name }}:{{ $address.Port }};
      {{ end }}
		{{ end }}

	{{/* Else default to standard web port 80 */}}
	{{ else }}
		{{ range $i, $address := $value.Addresses }}
			{{ if eq $address.Port "80" }}
			# {{$value.Name}}
			server {{ $value.Name }}:{{ $address.Port }};
			{{ end }}
		{{ end }}
	{{ end }}
{{ end }}
}
 
{{ end }}


server {
  resolver 127.0.0.11 valid=30s;
  listen 80;
	#listen              443 ssl;
	#ssl                 on;

  
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	client_max_body_size 256M;

	# proxy_buffering off;
	error_log /proc/self/fd/2;
  access_log  off;
	#access_log /proc/self/fd/1;

	{{ range $path, $containers := groupByMulti $ "Env.VIRTUAL_PATH" "," }}
    {{ range $index, $value := $containers }}
      location {{ $value.Env.VIRTUAL_PATH }} {
        proxy_pass http://{{ $value.Name }}/;
        #include /etc/nginx/proxy_params;

        # testing adding this here
        # HTTP 1.1 support
        proxy_http_version 1.1;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host $server_name;

        # For handling WebSockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
      }
    {{ end }}
	{{ end }}
}
