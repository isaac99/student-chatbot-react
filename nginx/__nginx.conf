worker_processes 1;

events { worker_connections 1024; }


http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    # upstream web {
    #    server client:3000;
    #}  

    upstream api {
       server api:3010 max_fails=0;
    }

    
    # upstream keycloak {
    #    server keycloak:8080;
    # }
    
    server {
        
        # this is the internal Docker DNS, cache only for 30s
        resolver 127.0.0.11 valid=30s;
        
        listen 80;
        # access_log /var/log/nginx/access.log compression;
        access_log  off;

        #location / {
        #    proxy_pass         http://web/;
        #    proxy_redirect     off;
        #    proxy_set_header   Host $host;
        #    proxy_set_header   X-Real-IP $remote_addr;
        #    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header   X-Forwarded-Host $server_name;
        #}

        location /api/ {
          proxy_pass          http://api/;
          proxy_http_version  1.1;
          proxy_redirect      off;
          proxy_set_header    Host $host;
          proxy_set_header    X-Real-IP $remote_addr;
          proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Host $server_name;

          # For handling WebSockets
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
        }

        #location /sockjs-node {
        #  # This is for WebDevServer in Webpack/React
        #  proxy_pass          http://web;
        #  proxy_http_version  1.1;
        #  proxy_set_header    Upgrade $http_upgrade;
        #  proxy_set_header    Connection "upgrade";
        #  proxy_set_header    Host $http_host;
        #  proxy_set_header    X-Real-IP $remote_addr;
        #}

        
        # location /keycloak/ {
        #     proxy_pass         http://keycloak/;
        #     proxy_redirect     off;
        #     proxy_set_header   Host $host;
        #     proxy_set_header   X-Real-IP $remote_addr;
        #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header   X-Forwarded-Host $server_name;
        # }
    }
}